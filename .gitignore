# Local .terraform directories
**/.terraform/*

# .tfstate files
terraform/*.tfstate
terraform/*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
terraform/*.tfvars
terraform/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
terraform/override.tf
terraform/override.tf.json
terraform/*_override.tf
terraform/*_override.tf.json

# Ignore transient lock info files created by terraform apply
terraform/.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore OS based files
.DS_Store

# Ignore CLI configuration files
terraform/.terraformrc
terraform/terraform.rc

# Ignore any .tfstate backup files
terraform/*.tfstate.backup

# Ignore any plan output files
terraform/*.tfplan

# Ignore any module directories
**/.terraform/modules/

# Ignore any temporary files created by editors or IDEs
*.swp
*.bak
*.tmp

# Ignore ssh key folder
terraform/terraform_azure_key_ssh

# Ignore terraform files
terraform/main.tfplan
terraform/.terraform*
terraform/terraform.tfstate

# python
terraform/.venv/

# ansible
ansible/ansible.cfg 
ansible/keys 
ansible/tuto.md
ansible/hosts
